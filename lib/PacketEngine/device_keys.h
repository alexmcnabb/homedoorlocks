// This file contains keys for all the devices
// Entries are added by generate_device_keys.py and can be removed by manually deleting them



#define BASE_HASH_01 {0xAA, 0xCD, 0x6E, 0xC6, 0xF4, 0x4F, 0xA3, 0xE0, 0x70, 0xA9, 0x9B, 0xA5, 0x25, 0x81, 0x10, 0x8D, 0x7E, 0x73, 0x5E, 0x01, 0xAB, 0xAD, 0x1E, 0xE4, 0x65, 0x95, 0x2E, 0x3D, 0x91, 0x1B, 0xE1, 0x97, 0xDB, 0x2C, 0xFC, 0xCA, 0x55, 0xE1, 0xBF, 0xFB, 0x0F, 0xEC, 0x39, 0xA6, 0x70, 0x80, 0x55, 0x5F, 0x36, 0x5E, 0x23, 0x56, 0xCC, 0xAE, 0xD1, 0x04, 0xD4, 0x86, 0xCF, 0xB8, 0xF6, 0x24, 0x81, 0x2C}
#define HASH_TOKEN_01 0xD58640B3

#define BASE_HASH_02 {0x1D, 0x5E, 0x22, 0xA0, 0x44, 0x1B, 0xDB, 0xDD, 0xC4, 0x40, 0xCF, 0x04, 0xD4, 0xA9, 0xEC, 0x28, 0x80, 0xB9, 0x3D, 0xFA, 0x81, 0x36, 0x39, 0x73, 0x64, 0xF0, 0xA0, 0x3E, 0x72, 0xCC, 0x17, 0xF0, 0x79, 0xA3, 0xF8, 0x2F, 0x58, 0xD8, 0xAE, 0xBA, 0x9A, 0x8D, 0x80, 0x41, 0x5B, 0x78, 0x2C, 0xCD, 0xD4, 0x9D, 0xD2, 0x6A, 0xBB, 0x10, 0x53, 0xD5, 0x53, 0x15, 0xC8, 0x68, 0xC6, 0xC1, 0x7C, 0x4A}
#define HASH_TOKEN_02 0x3BB8A853

// --EndOfDeviceKeyDefs--


// The following code should be edited manually to include all required keys
// device id parameter is ignored when getting keys from the remote side, since there's only one key available then
#define REMOTE_COUNT 2
#ifdef DEVICE_ID
    #if(DEVICE_ID == 1)
        const uint8_t BASE_HASH[] = BASE_HASH_01; const uint32_t HASH_TOKEN = HASH_TOKEN_01;
    #endif
    #if(DEVICE_ID == 2)
        const uint8_t BASE_HASH[] = BASE_HASH_02; const uint32_t HASH_TOKEN = HASH_TOKEN_02;
    #endif
#else
    // Note: Make sure to access these arrays with i = (device_id - 1) since they're zero based but device_ids are 1 based
    const uint8_t BASE_HASHS[][64] = {BASE_HASH_01, BASE_HASH_02};
    const uint32_t HASH_TOKENS[] = {HASH_TOKEN_01, HASH_TOKEN_02};
#endif
