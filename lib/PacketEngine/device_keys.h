// This file contains keys for all the devices
// Entries are added by generate_device_keys.py and can be removed by manually deleting them



#define BASE_HASH_01 {0xF3, 0x87, 0xD9, 0xBC, 0x69, 0xD5, 0xE3, 0x7C, 0xB8, 0x72, 0x55, 0xE4, 0x4F, 0x50, 0xCD, 0xEA, 0xB0, 0xA6, 0x92, 0x34, 0x4C, 0x57, 0xDC, 0x22, 0x1E, 0x89, 0x49, 0xDD, 0x68, 0x5A, 0xDE, 0x32, 0x1A, 0xB4, 0x6F, 0x9A, 0xF9, 0x45, 0xB5, 0x13, 0x25, 0xCE, 0x77, 0x42, 0x57, 0xF3, 0xDB, 0x04, 0x71, 0x98, 0x91, 0x21, 0xFD, 0x7D, 0x67, 0xC3, 0x86, 0x1A, 0x56, 0xBD, 0x7D, 0x20, 0x93, 0xC3}
#define HASH_TOKEN_01 0xD7FA04E1

#define BASE_HASH_02 {0x78, 0xB7, 0xA0, 0x15, 0x36, 0xC2, 0x8D, 0xD7, 0x8C, 0xDF, 0x81, 0x38, 0x83, 0x12, 0xB6, 0xE1, 0x30, 0x7F, 0xA9, 0x7D, 0x8E, 0xB2, 0xE8, 0xCC, 0x72, 0x9E, 0xAE, 0x5D, 0x15, 0x1C, 0x3C, 0x75, 0x69, 0x5D, 0xAD, 0xF5, 0x2E, 0xB0, 0xD8, 0x1E, 0xF2, 0xD8, 0x2B, 0x89, 0x4B, 0x88, 0xE0, 0x48, 0xAD, 0x06, 0xA8, 0x78, 0xE0, 0x58, 0x86, 0xC3, 0x21, 0xA3, 0x6D, 0x77, 0x1D, 0x20, 0xB0, 0x56}
#define HASH_TOKEN_02 0x42505FDD

// --EndOfDeviceKeyDefs--


// The following code should be edited manually to include all required keys
// device id parameter is ignored when getting keys from the remote side, since there's only one key available then
#define REMOTE_COUNT 2
#ifdef DEVICE_ID
    #if(DEVICE_ID == 1)
        const uint8_t BASE_HASH[] = BASE_HASH_01; const uint32_t HASH_TOKEN = HASH_TOKEN_01;
    #endif
    #if(DEVICE_ID == 2)
        const uint8_t BASE_HASH[] = BASE_HASH_02; const uint32_t HASH_TOKEN = HASH_TOKEN_02;
    #endif
#else
    // Note: Make sure to access these arrays with i = (device_id - 1) since they're zero based but device_ids are 1 based
    const uint8_t BASE_HASHS[][64] = {BASE_HASH_01, BASE_HASH_02};
    const uint32_t HASH_TOKENS[] = {HASH_TOKEN_01, HASH_TOKEN_02};
#endif
